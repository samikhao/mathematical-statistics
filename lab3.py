'''
"С помощью критерия Пирсона (хи-квадрат), проверить гипотезу, что случайная выборка, имеет экспоненциальное распределение с параметром lambda = 1.07
Взять равномерную сетку из 10 интервалов и уровень значимости epsilon = 0.05."
'''

import numpy as np
from scipy.stats import chi2

# Исходные данные
x = np.array([
    0.17, 0.06, 0.97, 1.14, 0.48, 1.84, 0.29, 0.06, 0.6, 0.07, 0.58, 0.5, 0.26, 0.15,
    0.8, 0.15, 0.18, 0.09, 1.18, 1.2, 1.51, 0.35, 0.55, 0.01, 0.71, 1.4, 0.67, 0.1,
    0.47, 0.09, 0.76, 0.23, 0.35, 0.02, 0.14, 0.01, 0.04, 0.04, 0.02, 0.88, 1.09, 1.21,
    0.38, 1.52, 0.87, 0.25, 0.11, 0.44, 0.86, 0.3, 0.75, 0.08, 0.75, 0.04, 0.56, 0.12,
    0.03, 0.37, 1.87, 0.03, 1.14, 0.33, 1.64, 0.77, 0.2, 0.54, 0.5, 0.19, 0.02, 0.19,
    0.31, 0.06, 0.45, 0.22, 0.08, 0.35, 0.22, 0.28, 0.5, 1.19, 0.68, 0.82, 0.54, 0.42,
    0.24, 0.02, 0.49, 0.19, 0.44, 1.93, 0.08, 0.57, 0.25, 0.63, 0.21, 0.49, 0.08, 2.36, 0.09, 1.22
])

# Параметры
lambda_ = 1.07
epsilon = 0.05
k = 10
N = len(x)

# Построение интервалов
x_min, x_max = x.min(), x.max()
boundaries = np.linspace(x_min, x_max, k + 1)

print("Интервалы:")
for i in range(k):
    print(f"{i+1}) [{boundaries[i]:.3f}; {boundaries[i+1]:.3f})")

# Наблюдаемые частоты n_i
n_i = np.histogram(x, bins=boundaries)[0]
print("\nn_i (наблюдаемые частоты):")
print(n_i)

# Теоретическая функция распределения
def F(x, lambda_):
    return 1 - np.exp(-lambda_ * x)

# p_i — теоретические вероятности
p_i = np.array([
    F(boundaries[i+1], lambda_) - F(boundaries[i], lambda_)
    for i in range(k)
])

# Ожидаемые частоты N * p_i
Np_i = N * p_i
print("\nN*p_i (ожидаемые частоты):")
print(np.round(Np_i, 2))

# Статистика критерия хи-квадрат
chi_sq = np.sum((n_i - Np_i)**2 / Np_i)

# Критическое значение
df = k - 1
chi_crit = chi2.ppf(1 - epsilon, df)

print(f"\nχ² (наблюдаемое значение): {chi_sq:.3f}")
print(f"χ²_crit (критическое значение): {chi_crit:.3f}")

# Проверка гипотезы
if chi_sq <= chi_crit:
    print("Гипотеза H1 не отвергается — данные соответствуют экспоненциальному распределению.")
else:
    print("Гипотеза H1 отвергается — данные не соответствуют экспоненциальному распределению.")
